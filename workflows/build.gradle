plugins {
    id 'net.corda.plugins.cordapp'
    id 'net.corda.plugins.quasar-utils'
    id 'org.jetbrains.kotlin.jvm'
    id 'maven-publish'
}

cordapp {
    targetPlatformVersion = property("corda.platform.version").toInteger()
    minimumPlatformVersion = property("corda.platform.version").toInteger()
    workflow {
        name "Splitcorda Flows"
        vendor "Corda Open Source"
        licence "Apache License, Version 2.0"
        versionId 1
    }
}

sourceSets {
    main {
        resources {
            srcDir rootProject.file("config/dev")
        }
    }
    test {
        resources {
            srcDir rootProject.file("config/test")
        }
    }
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationTest/kotlin')
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    cordaCompile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: property("version.kotlin")
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: property("version.junit")
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: property("version.junit")

    // Corda dependencies.
    cordaCompile group: "net.corda", name: "corda-core", version: property("version.corda")
    cordaRuntime group: "net.corda", name: "corda", version: property("version.corda")
    testCompile group: "net.corda", name: "corda-node-driver", version: property("version.corda")

    // CorDapp dependencies.
    cordapp project(":contracts")
}

task integrationTest(type: Test, dependsOn: []) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = groupId
            artifactId = 'splitcorda-workflows'
            version = project.version
            from components.java
        }
    }
}

